name: CI

on:
  pull_request:
    branches: [ main, master ]
    paths:
      - 'experimental/SMUS-CICD-pipeline-cli/**'
  push:
    branches: [ main, master ]
    paths:
      - 'experimental/SMUS-CICD-pipeline-cli/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        cd experimental/SMUS-CICD-pipeline-cli
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        pip install flake8 black isort
    
    - name: Lint with flake8
      run: |
        cd experimental/SMUS-CICD-pipeline-cli
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Check code formatting with black
      run: |
        cd experimental/SMUS-CICD-pipeline-cli
        black --check --diff src/
    
    - name: Check import sorting with isort
      run: |
        cd experimental/SMUS-CICD-pipeline-cli
        isort --check-only --diff src/

  unit-tests:
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        cd experimental/SMUS-CICD-pipeline-cli
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run unit tests with coverage
      run: |
        cd experimental/SMUS-CICD-pipeline-cli
        python scripts/run_tests.py --type unit --no-html-report
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./experimental/SMUS-CICD-pipeline-cli/tests/reports/coverage.xml
        fail_ci_if_error: false
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unit-test-results
        path: experimental/SMUS-CICD-pipeline-cli/tests/reports/

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        cd experimental/SMUS-CICD-pipeline-cli
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        pip install safety bandit
    
    - name: Check for security vulnerabilities
      run: |
        cd experimental/SMUS-CICD-pipeline-cli
        safety check
        bandit -r src/ -f json -o bandit-report.json || true
    
    - name: Upload security report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-report
        path: experimental/SMUS-CICD-pipeline-cli/bandit-report.json
