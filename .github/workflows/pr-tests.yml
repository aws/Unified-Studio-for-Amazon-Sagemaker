name: PR Integration Tests

on:
  pull_request:
    branches: [ main, master ]
    paths:
      - 'experimental/SMUS-CICD-pipeline-cli/**'

concurrency:
  group: pr-tests-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        cd experimental/SMUS-CICD-pipeline-cli
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run unit tests with coverage
      run: |
        cd experimental/SMUS-CICD-pipeline-cli
        python scripts/run_tests.py --type unit --no-html-report
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./experimental/SMUS-CICD-pipeline-cli/tests/reports/coverage.xml
        fail_ci_if_error: false
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unit-test-results
        path: experimental/SMUS-CICD-pipeline-cli/tests/reports/

  integration-tests:
    runs-on: ubuntu-latest
    environment: aws-env
    needs: unit-tests
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Validate environment variables
      env:
        DEV_DOMAIN_REGION: ${{ vars.DEV_DOMAIN_REGION }}
      run: |
        echo "Validating required environment variables..."
        echo "DEV_DOMAIN_REGION: ${DEV_DOMAIN_REGION:-NOT_SET}"
        if [ -z "$DEV_DOMAIN_REGION" ]; then
          echo "‚ùå ERROR: DEV_DOMAIN_REGION environment variable is not set in aws-env environment"
          echo "Please set DEV_DOMAIN_REGION in GitHub repository settings > Environments > aws-env"
          exit 1
        fi
        echo "‚úÖ All required environment variables are set"
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-2
        role-to-assume: ${{ secrets.AWS_ROLE_ARN_DEV }}
        role-session-name: smus-cicd-integration-tests
        role-duration-seconds: 43200  # 12 hours for long-running MWAA operations
    
    - name: Install dependencies
      run: |
        cd experimental/SMUS-CICD-pipeline-cli
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run integration tests
      env:
        DEV_DOMAIN_REGION: ${{ vars.DEV_DOMAIN_REGION }}
      run: |
        cd experimental/SMUS-CICD-pipeline-cli
        echo "üß™ Running all integration tests..."
        python -m pytest tests/integration/ -v -s --tb=short --ignore=tests/integration/delete_test_pipeline/ || {
          echo "‚ùå Integration tests failed - analyzing domain/region/project access patterns"
          echo "=============================================================="
          exit 1
        }
    
    - name: Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports-${{ github.run_number }}
        path: |
          experimental/SMUS-CICD-pipeline-cli/tests/reports/
        retention-days: 30
    
    - name: Upload test summary
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-summary-${{ github.run_number }}
        path: |
          experimental/SMUS-CICD-pipeline-cli/tests/reports/*.html
          experimental/SMUS-CICD-pipeline-cli/tests/reports/*.xml
        retention-days: 7
