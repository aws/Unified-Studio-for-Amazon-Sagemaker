AWSTemplateFormatVersion: '2010-09-09'
Description: 'Create Amazon DataZone Domain for Unified Studio with all required roles'

Parameters:
  DomainName:
    Type: String
    Default: 'unified-studio-domain'
    Description: 'Name for the DataZone domain'

Resources:
  # Domain Execution Role
  UnifiedStudioDomainExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${DomainName}-DomainExecutionRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: datazone.amazonaws.com
            Action:
              - sts:AssumeRole
              - sts:TagSession
              - sts:SetContext
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId
              ForAllValues:StringLike:
                aws:TagKeys: "datazone*"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/SageMakerStudioDomainExecutionRolePolicy

  # Service Role
  UnifiedStudioServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${DomainName}-ServiceRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: datazone.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/SageMakerStudioDomainServiceRolePolicy

  # SageMaker Manage Access Role
  UnifiedStudioSageMakerManageAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${DomainName}-SageMakerManageAccessRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: datazone.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonDataZoneGlueManageAccessRolePolicy
        - arn:aws:iam::aws:policy/service-role/AmazonDataZoneRedshiftManageAccessRolePolicy
        - arn:aws:iam::aws:policy/AmazonDataZoneSageMakerManageAccessRolePolicy

  # SageMaker Provisioning Role
  UnifiedStudioSageMakerProvisioningRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${DomainName}-SageMakerProvisioningRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - sagemaker.amazonaws.com
                - datazone.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/SageMakerStudioProjectProvisioningRolePolicy

  # Project Execution Role
  UnifiedStudioProjectExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${DomainName}-ProjectExecutionRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - sagemaker.amazonaws.com
                - datazone.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ProjectExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'

  # DataZone Domain
  Domain:
    Type: AWS::DataZone::Domain
    Properties:
      Name: !Ref DomainName
      Description: "Unified Studio Domain for Marketing Teams"
      DomainExecutionRole: !GetAtt UnifiedStudioDomainExecutionRole.Arn
      DomainVersion: "V2"
      ServiceRole: !GetAtt UnifiedStudioServiceRole.Arn
      SingleSignOn: {
        Type: "IAM_IDC",
        UserAssignment: "AUTOMATIC"
      }
      
Outputs:
  DomainId:
    Description: 'DataZone Domain ID'
    Value: !Ref Domain
    Export:
      Name: !Sub '${AWS::StackName}-DomainId'
  
  DomainArn:
    Description: 'DataZone Domain ARN'
    Value: !GetAtt Domain.Arn
    Export:
      Name: !Sub '${AWS::StackName}-DomainArn'

  RootDomainUnitId:
    Description: 'Root Domain Unit ID'
    Value: !GetAtt Domain.RootDomainUnitId
    Export:
      Name: !Sub '${AWS::StackName}-RootDomainUnitId'

  SageMakerManageAccessRoleArn:
    Description: 'SageMaker Manage Access Role ARN'
    Value: !GetAtt UnifiedStudioSageMakerManageAccessRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-SageMakerManageAccessRole'

  SageMakerProvisioningRoleArn:
    Description: 'SageMaker Provisioning Role ARN'
    Value: !GetAtt UnifiedStudioSageMakerProvisioningRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-SageMakerProvisioningRole'

  ProjectExecutionRoleArn:
    Description: 'Project Execution Role ARN'
    Value: !GetAtt UnifiedStudioProjectExecutionRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-ProjectExecutionRole'
